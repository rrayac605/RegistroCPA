<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-3.2.xsd
    	http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-2.5.xsd">
    	
    <context:component-scan base-package="mx.gob.imss.cit.de.dictaminacion.batch.validation.scheduler" />
    
    <bean id="rutasDao" class="mx.gob.imss.cit.de.dictaminacion.batch.validation.RutasDAO">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <context:property-placeholder location="jdbc.properties"/>
    	
    <bean id="txtFile" class="mx.gob.imss.cit.de.dictaminacion.batch.validation.to.TxtFileTO" scope="prototype" />
    <bean id="a1" class="mx.gob.imss.cit.de.dictaminacion.batch.validation.to.A1TO" scope="prototype" />
    <bean id="itemProcessor" class="mx.gob.imss.cit.de.dictaminacion.batch.validation.processors.TxtFileProcessor" />
    
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
	
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
 
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
     
	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" writer="itemWriter" processor="itemProcessor"
					commit-interval="2">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	 <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
	
		<!-- Read a csv file -->
		<property name="resource" value="file:#{jobParameters[origen]}" />
		<property name="linesToSkip" value="1"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">				
				<property name="lineTokenizer">
		        	<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		        		<property name="delimiter">
    						<util:constant static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB"/>
						</property>
						<property name="strict" value="false"/>
						<property name="names" value="#{jobParameters[fields]}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="#{jobParameters[prototype]}" />
					</bean>
				</property>	
			</bean>
		</property>
	
	</bean>	
	
	<bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
	    <property name="resource" value="file:#{jobParameters[destino]}" />
	    <property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
	            <property name="fieldExtractor">
	                <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
	                    <property name="names" value="#{jobParameters[fields]}" />
	                </bean>
	            </property>
            </bean>
		</property>
	</bean>		
	
  	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>spring/batch/properties/configuration.properties</value>
		</property>
	</bean>	
	
	<bean id="scanScheduler" class="mx.gob.imss.cit.de.dictaminacion.batch.validation.scanner.ScanBucket" >
		<property name="rutaOrigen" value="${aws.ruta.origen}"/>
		<property name="rutaDestino" value="${configuracion.ruta.destino}"/>
		<property name="rutaProcesamiento" value="${aws.ruta.procesamiento}"/>
		<property name="bucketName" value="${aws.bucket}"/>
		<property name="rutaAWSCredentials" value="${aws.ruta.credentials}"/>
		<property name="extension" value="#{'${configuracion.extensiones.permitidas}'.split(',')}"/>
	</bean>

	<task:scheduled-tasks>
		<task:scheduled ref="scanScheduler" method="run" fixed-delay="${configuracion.scheduler.delay}"/>
	</task:scheduled-tasks>

</beans>

